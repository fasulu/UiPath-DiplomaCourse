<Activity mc:Ignorable="sap sap2010" x:Class="Download_client_and_support" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_Browser" Type="InOutArgument(ui:Browser)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_FolderPathToSave" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1143,4205</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Download_client_and_support_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;This workflow is used for downloading the client and support pdf files. If the location where you want to save the files does not exist, then that location will be created,&#xA;&#xA;Usage:&#xA;in_Browser must not be empty&#xA;in_FolderPathToSave must not be empty&#xA;&#xA;In arguments:&#xA;in_FolderPathToSave : String&#xA;&#xA;IO arguments:&#xA;io_Browser : Browser" DisplayName="Download_client_and_support" sap:VirtualizedContainerService.HintSize="1153,4140" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Where: At the start of the workflow&#xD;&#xA;Level: Info&#xD;&#xA;Message: &quot;Start download client and support&quot;&#xD;&#xA;Why: Use log messages at the beginning and the end of every workflow." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1111,178" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start download client and support&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateSavingPath workflow" sap:VirtualizedContainerService.HintSize="1111,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="General\CreateSavingPath.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FolderPathToSave">[in_FolderPathToSave]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:BrowserScope SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Browser="[io_Browser]" BrowserType="IE" DisplayName="Attach Browser 'Download client and support'" sap:VirtualizedContainerService.HintSize="1111,3268" sap2010:WorkflowViewState.IdRef="BrowserScope_1" UiBrowser="[io_Browser]">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - download client and support" sap:VirtualizedContainerService.HintSize="1077,3160" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="SaveAsExists" />
              <Variable x:TypeArguments="ui:GenericValue" Name="FilePathToSave" />
              <Variable x:TypeArguments="x:Boolean" Name="FilePathExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <While DisplayName="While - Download each pdf file" sap:VirtualizedContainerService.HintSize="1035,3068" sap2010:WorkflowViewState.IdRef="While_1">
              <While.Variables>
                <Variable x:TypeArguments="x:Int32" Default="5" Name="Counter" />
              </While.Variables>
              <While.Condition>[Counter &gt; 0]</While.Condition>
              <Sequence DisplayName="Download each pdf file sequence" sap:VirtualizedContainerService.HintSize="989,2911" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'Work item '" sap:VirtualizedContainerService.HintSize="947,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_RIGHT" SendWindowMessages="True" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="89222a11-d7c1-4491-9ab7-044d3d82e91a" InformativeScreenshot="4ad3722e1e42ad8133a42338b1b39577" Selector="[&quot;&lt;webctrl aaname='Work Item &quot; + Counter.ToString + &quot;' parentid='pagetext' tag='A' /&gt;&quot;]">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'Save target as...'" sap:VirtualizedContainerService.HintSize="947,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2373ac26-b914-47b3-b51a-192e124dd75d" InformativeScreenshot="554958e9e826e93a7b6b18ac50d38407" Selector="&lt;wnd app='iexplore.exe' cls='#32768' /&gt;&lt;ctrl name='Context' role='popup menu' /&gt;&lt;ctrl automationid='2268' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:UiElementExists DisplayName="Element Exists 'Save As'" Exists="[SaveAsExists]" sap:VirtualizedContainerService.HintSize="947,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="65ce6aef-2741-48ca-8f50-6fe6813a6512" InformativeScreenshot="b8a44a40c05a06896abcdbd953669daa" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <Assign DisplayName="Assign - get the location of the file to save" sap:VirtualizedContainerService.HintSize="947,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[FilePathToSave]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[Path.Combine(in_FolderPathToSave, "WI" + Counter.ToString + " - Step by step.pdf")]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[SaveAsExists]" DisplayName="If it can be saved" sap:VirtualizedContainerService.HintSize="947,1493" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="Sequence - Save file" sap:VirtualizedContainerService.HintSize="526,1336" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="ConfirmSaveAsExists" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" DisplayName="Type Into 'File Name'" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="True" Text="[FilePathToSave]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="620645b4-ea87-43d0-93f1-4e3c29ef769b" InformativeScreenshot="dde7f758207eda866615793ff75f0743" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Save As' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:Click DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayMS="500" DisplayName="Click 'Ok'" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="131b5496-dd68-49cc-bf04-ef7cd4148bc3" InformativeScreenshot="f68a38f0804e0e54c013ee2383dc937c" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Save As' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Save' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:UiElementExists DisplayName="Element Exists 'Confirm save as'" Exists="[ConfirmSaveAsExists]" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                        <ui:UiElementExists.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4b6ac7c4-ba8c-41d3-aa6a-da3170ea250b" InformativeScreenshot="ffe81273c335c972c6ff3755922416d7" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Confirm Save As' /&gt;&lt;wnd aaname='Confirm Save As' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Yes' cls='Button' title='*Yes' /&gt;" TimeoutMS="2000">
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:UiElementExists.Target>
                      </ui:UiElementExists>
                      <If Condition="[ConfirmSaveAsExists]" DisplayName="If confirm save as exists" sap:VirtualizedContainerService.HintSize="484,632" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Sequence DisplayName="Replace file  sequence" sap:VirtualizedContainerService.HintSize="376,446" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage sap2010:Annotation.AnnotationText="Where: In the Then branch of the If confirm save as exists activity&#xD;&#xA;Level: Warn&#xD;&#xA;Message: &quot;The file already exists. It will be overwritten&quot;&#xD;&#xA;Why: Use the warn level to log any important data that we need to stand out from the rest of the log information." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,208" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;The file already exists. It will be overwritten&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c1114af2-7acb-4a07-9601-2c126cb83080" InformativeScreenshot="18fd0d28e79fd5763e14d35eb994d54b" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Confirm Save As' /&gt;&lt;wnd aaname='Confirm Save As' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Yes' cls='Button' title='*Yes' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </If.Then>
                      </If>
                      <ui:Click SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayBefore="1500" DelayMS="1000" DisplayName="Click 'push button  Close'" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d92b9ac9-1998-4160-a190-0eed2f8f79e6" InformativeScreenshot="b903bb1ae96a456c4c9913720e197a15" Selector="&lt;wnd app='iexplore.exe' cls='IEFrame' title='ACME System 1 - Download Client and Support - Internet Explorer' /&gt;&lt;wnd aaname='Notification' cls='DirectUIHWND' /&gt;&lt;ctrl automationid='IENotificationBar' /&gt;&lt;ctrl name='Close' role='push button' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Sequence - Could not save file" sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage sap2010:Annotation.AnnotationText="Where: In the Else branch of the If it can be saved activity, before the Throw activity&#xD;&#xA;Level: Fatal&#xD;&#xA;Message: &quot;Save as UI is not opened&quot;&#xD;&#xA;Why: The Robot cannot recover from this error." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,178" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;Save as UI is not opened&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <Throw DisplayName="Throw - BRE : Could not save file" Exception="[New BusinessRuleException(&quot;Could not save due to the fact that Save As UI does not exist&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:PathExists DisplayName="Path Exists - File to save" Exists="[FilePathExists]" sap:VirtualizedContainerService.HintSize="947,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[FilePathToSave]" PathType="File" />
                <If Condition="[FilePathExists]" DisplayName="If file path exists" sap:VirtualizedContainerService.HintSize="947,519" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <ui:LogMessage sap2010:Annotation.AnnotationText="Where: In the Then branch of the If file path exists activity&#xD;&#xA;Level: Info&#xD;&#xA;Message: &quot;File saved successfully in the path: &quot; + FilePathToSave&#xD;&#xA;Why: Use log messages in If/Flowchart Decision/Switch/Flow Switch activities. In the case of less complex processes, the Info level is a good choice." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,223" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;File saved successfully in the path: &quot; + FilePathToSave]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Sequence - file not saved successfully" sap:VirtualizedContainerService.HintSize="376,362" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage sap2010:Annotation.AnnotationText="Where: In the Else branch of the If file path exists activity, before the Throw activity&#xD;&#xA;Level: Fatal&#xD;&#xA;Message: &quot;Current WI&quot; + Counter.ToString + &quot; file could not be saved successfully in the path: &quot; + FilePathToSave&#xD;&#xA;Why: The Robot cannot recover from this error." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,208" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Fatal" Message="[&quot;Current WI&quot; + Counter.ToString + &quot; file could not be saved successfully in the path: &quot; + FilePathToSave]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <Throw DisplayName="Throw - BRE: File could not be saved" Exception="[New BusinessRuleException(&quot;File could not be saved successfully&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                    </Sequence>
                  </If.Else>
                </If>
                <Assign DisplayName="Assign - go to the next file" sap:VirtualizedContainerService.HintSize="947,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[Counter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[Counter - 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BrowserScope>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Where: At the end of the workflow&#xD;&#xA;Level: Info&#xD;&#xA;Message: &quot;End download client and support&quot;&#xD;&#xA;Why: Use log messages at the beginning and the end of every workflow." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1111,178" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;End download client and support&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>